{"ast":null,"code":"var _jsxFileName = \"/Users/mazinabed/Desktop/React-Portfolio/pages/App.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport FriendCard from '../components/FriendCard';\nimport Wrapper from \"../components/Wrapper\";\nimport Title from \"../components/Title\";\nimport friends from '../friends.json';\nexport default function App() {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n    this.setState({\n      friends\n    });\n  }; // Map over this.state.friends and render a FriendCard component for each friend object\n\n\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Friends List\"), this.state.friends.map(friend => __jsx(FriendCard, {\n    removeFriend: this.removeFriend,\n    id: friend.id,\n    key: friend.id,\n    name: friend.name,\n    image: friend.image,\n    occupation: friend.occupation,\n    location: friend.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/mazinabed/Desktop/React-Portfolio/pages/App.js"],"names":["FriendCard","Wrapper","Title","friends","App","state","removeFriend","id","filter","friend","setState","map","name","image","occupation","location"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,eAAe,SAASC,GAAT,GAAgB;AAC7B;AACAC,EAAAA,KAAK,GAAG;AACNF,IAAAA;AADM,GAAR;;AAIAG,EAAAA,YAAY,GAAGC,EAAE,IAAI;AACnB;AACA,UAAMJ,OAAO,GAAG,KAAKE,KAAL,CAAWF,OAAX,CAAmBK,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACF,EAAP,KAAcA,EAAlD,CAAhB,CAFmB,CAGnB;;AACA,SAAKG,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACD,GALD,CAN6B,CAa7B;;;AAEE,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKE,KAAL,CAAWF,OAAX,CAAmBQ,GAAnB,CAAuBF,MAAM,IAC5B,MAAC,UAAD;AACE,IAAA,YAAY,EAAE,KAAKH,YADrB;AAEE,IAAA,EAAE,EAAEG,MAAM,CAACF,EAFb;AAGE,IAAA,GAAG,EAAEE,MAAM,CAACF,EAHd;AAIE,IAAA,IAAI,EAAEE,MAAM,CAACG,IAJf;AAKE,IAAA,KAAK,EAAEH,MAAM,CAACI,KALhB;AAME,IAAA,UAAU,EAAEJ,MAAM,CAACK,UANrB;AAOE,IAAA,QAAQ,EAAEL,MAAM,CAACM,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAgBD","sourcesContent":["import FriendCard from '../components/FriendCard';\nimport Wrapper from \"../components/Wrapper\";\nimport Title from \"../components/Title\";\nimport friends from '../friends.json';\n\nexport default function App () {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  \n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n\n\n\n"]},"metadata":{},"sourceType":"module"}